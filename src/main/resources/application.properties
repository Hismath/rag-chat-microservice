spring.application.name=rag-chat-microservice

# --- Server ---
server.port=${SERVER_PORT:8082}

# --- Database (from env) ---
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# --- JPA / Hibernate ---
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.open-in-view=false

# --- Security / API Key (from env) ---
api.key=${API_KEY}

# --- Rate limiting (from env, with sane defaults) ---
ratelimit.permits=${RATE_LIMIT_PERMITS:10}
ratelimit.window-seconds=${RATE_LIMIT_WINDOW_SECONDS:60}
ratelimit.cache-max-size=${RATE_LIMIT_CACHE_MAX_SIZE:1000}


# --- AI Service (from env) ---
ai.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent
ai.api.key=${GEMINI_API_KEY}

# --- Swagger / OpenAPI ---
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.custom-js=/swagger-init.js

# --- Actuator (only common safe endpoints by default) ---
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

info.app.name=RAG Chat Microservice
info.app.description=Chatbot backend with RAG
info.app.version=1.0.0

# --- CORS (restrict in prod; comma-separate multiple origins) ---
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000}

# --- Logging (quiet by default; override in dev) ---
logging.level.root=INFO
logging.level.rag_chat_microservice=INFO

# --- Disable default Spring Security user ---
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
